package service;

import java.io.IOException;
import java.lang.reflect.Field;
import java.util.Random;

import jxl.read.biff.BiffException;
import models.ExternalFactors;
import models.ParentTask;

import org.apache.commons.math3.stat.descriptive.moment.StandardDeviation;
import org.apache.commons.math3.stat.descriptive.moment.Variance;
import org.apache.commons.math3.stat.descriptive.rank.Max;
import org.apache.commons.math3.stat.descriptive.rank.Min;

public class PollService {
	public static final int n = 50;
	public static final String[] q1 = {
			"Каким образом вы оцениваете сроки выполнения запланированных заданий?",
			"Хватает ли вам существующих источников для определения времени выполнения заданий с удовлетворительной точностью?",
			"Хотели бы Вы иметь дополнительный инструмент оценивания сроков выполнения заданий?" };
	public static final String[][] v1 = {
			{ "Основываясь на своем опыте", "Советуясь с коллегами",
					"Используя внешние данные по выполнению подобных заданий" },
			{ "Хватает", "Хватает, но не полностью", "Не хватает" },
			{ "Да", "Нет" } };
	public static final double[][] p1 = { { 0.65, 0.33, 0.02 },
			{ 0.3, 0.4, 0.3 }, { 0.8, 0.2 } };

	public static final String[] q2 = {
			"Насколько адекватно разбиение задания на описанные этапы?",
			"Насколько адекватно разбиение этапов на итерации?",
			"Насколько адекватна предпосылка о минимальном времени выполнения задания при идеальных условиях и его увеличении в реальных условиях?",
			"Насколько адекватна предпосылка о вероятности провала итерации под воздействием внешних факторов?",
			"Насколько адекватна идея модели в целом?" };
	public static final String[][] v2 = {
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" },
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" },
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" },
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" },
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" } };

	public static final double[][] p2 = { { 0.25, 0.3, 0.25, 0.15, 0.05 },
			{ 0.15, 0.4, 0.3, 0.1, 0.05 }, { 0.2, 0.2, 0.4, 0.2, 0.0 },
			{ 0.15, 0.3, 0.25, 0.20, 0.1 }, { 0.45, 0.35, 0.15, 0.05, 0.0 } };

	public static final String[] q3 = {
			"Оцените силу влияния фактора «ум и опыт разработчика» в баллах от 0 до 10",
			"Оцените силу влияния фактора «мотивация разработчика» в баллах от 0 до 10",
			"Оцените силу влияния фактора «организация программного кода» в баллах от 0 до 10",
			"Оцените силу влияния фактора «понятность программного кода» в баллах от 0 до 10",
			"Оцените силу влияния фактора «удобство и производительность ПО, компьютеров и инфраструктуры» в баллах от 0 до 10",
			"Оцените силу влияния фактора «условия труда  разработчика» в баллах от 0 до 10",
			"Оцените силу влияния фактора «синергия разработчика с другими разработчиками» в баллах от 0 до 10",
			"Оцените силу влияния фактора «стабильность внешних модулей, входящих в проект» в баллах от 0 до 10",
			"Оцените силу влияния фактора «отсутствие форс-мажорных обстоятельств» в баллах от 0 до 10",
			"Оцените силу влияния фактора «взаимопонимание с клиентом» в баллах от 0 до 10",
			"Оцените силу влияния фактора «слаженность действий команды» в баллах от 0 до 10" };
	public static final String[][] v3 = {
			{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" },
			{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" },
			{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" },
			{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" },
			{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" },
			{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" },
			{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" },
			{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" },
			{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" },
			{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" },
			{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" } };

	public static final double[][] p3 = {
			{ 0, 0, 0, 0, 0, 0.05, 0.05, 0.1, 0.1, 0.4, 0.3 },
			{ 0.1, 0.2, 0.2, 0.15, 0.1, 0.1, 0.1, 0.05, 0, 0, 0 },
			{ 0.1, 0.2, 0.25, 0.2, 0.1, 0.1, 0.05, 0, 0, 0, 0 },
			{ 0.5, 0.3, 0.15, 0.05, 0, 0, 0, 0, 0, 0, 0 },
			{ 0.4, 0.3, 0.25, 0.05, 0, 0, 0, 0, 0, 0, 0 },
			{ 0.2, 0.25, 0.15, 0.15, 0.1, 0.1, 0.05, 0, 0, 0, 0 },
			{ 0.2, 0.25, 0.3, 0.15, 0.1, 0.0, 0.0, 0, 0, 0, 0 },
			{ 0.4, 0.35, 0.25, 0.0, 0, 0, 0, 0, 0, 0, 0 },
			{ 0.3, 0.35, 0.25, 0.1, 0.0, 0.0, 0.0, 0, 0, 0, 0 },
			{ 0.15, 0.25, 0.35, 0.2, 0.05, 0.0, 0.0, 0, 0, 0, 0 },
			{ 0.15, 0.3, 0.35, 0.15, 0.05, 0.0, 0.0, 0, 0, 0, 0 } };

	public static final String[] q4 = {
			"Насколько адекватно в модели описано распределение факторов влияния по сферам воздействия?",
			"Насколько адекватно выбран тип зависимости результата от факторов?",
			"Насколько адекватно выбрана сила воздействия факторов на результат?",
			"Насколько адекватно выбраны характер и сила воздействия случайных факторов?" };
	public static final String[][] v4 = {
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" },
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" },
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" },
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" } };

	public static final double[][] p4 = { { 0.25, 0.3, 0.25, 0.15, 0.05 },
			{ 0.15, 0.4, 0.3, 0.1, 0.05 }, { 0.2, 0.2, 0.4, 0.2, 0.0 },
			{ 0.15, 0.4, 0.25, 0.1, 0.1 } };

	public static final String[] q5 = {
			"Насколько адекватны результаты работы программы, построенной на модели?",
			"Насколько адекватно распределение результатов?",
			"Насколько адекватно смоделировано влияние факторов на конечный результат?",
			"Насколько адекватно поведение модели к крайним случаям комбинации факторов?",
			"Насколько полезна данная программа в Вашей профессиональной деятельности?" };
	public static final String[][] v5 = {
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" },
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" },
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" },
			{ "Полностью адекватно", "Описывает достаточно хорошо",
					"Описывает удовлетворительно",
					"Допущено много неточностей",
					"Практически ничего общего с действительностью не имеет" },
			{ "Просто незаменима", "Очень полезна",
					"Дает важную дополнительную информацию",
					"Помогает в редких случаях", "Бесполезна" } };

	public static final double[][] p5 = { { 0.15, 0.4, 0.3, 0.1, 0.05 },
			{ 0.25, 0.3, 0.25, 0.15, 0.05 }, { 0.15, 0.4, 0.25, 0.1, 0.1 },
			{ 0.2, 0.3, 0.3, 0.2, 0.0 }, { 0.4, 0.3, 0.15, 0.15, 0.0 } };

	public static int getPoll(double[] probabilities) {
		Random rnd = new Random();
		int res = 0;
		double ver = rnd.nextDouble();
		double sum = 0;
		for (int i = 0; i < probabilities.length; i++) {
			sum += probabilities[i];
			if (ver <= sum) {
				res = i;
				break;
			}

		}
		return res;
	}

	public static int[] getWholePoll(double[][] probabilities) {
		int[] res = new int[probabilities.length];
		for (int question = 0; question < probabilities.length; question++) {
			res[question] = getPoll(probabilities[question]);
		}
		return res;
	}

	public static int[][] getWholePolls(double[][] probabilities, int n) {
		int[][] res = new int[n][probabilities.length];
		for (int i = 0; i < n; i++) {
			res[i] = getWholePoll(probabilities);
		}
		return res;
	}

	public static int[][] calculateResults(int[][] inputData, int[] variants) {
		int[][] data = inputData;
		int[][] res = new int[data[0].length][];

		for (int question = 0; question < data[0].length; question++) {
			res[question] = new int[variants[question]];
			for (int people = 0; people < data.length; people++) {
				res[question][data[people][question]]++;
			}
		}
		return res;
	}

	public static int[] getVariants(double[][] ol) {
		int[] res = new int[ol.length];
		for (int i = 0; i < res.length; i++) {
			res[i] = ol[i].length;
		}
		return res;
	}

	public static void main(String[] args) {

		int data[][] = getWholePolls(p5, n);
		int res[][] = calculateResults(data, getVariants(p5));
		printResultPoll(res, q5, v5);
		printDataPoll(data, q5, v5);
	}

	public static void printResultPoll(int[][] res, String[] qnames,
			String[][] vnames) {
		for (int question = 0; question < res.length; question++) {
			p(qnames[question]);
			int sum = getSumArray(res[question]);
			for (int variant = 0; variant < res[question].length; variant++) {
				p(vnames[question][variant] + ": " + res[question][variant]
						+ " ("
						+ Double.parseDouble(res[question][variant] * 100 + "")
						/ Double.parseDouble(sum + "") + "%)");
			}
		}
	}

	public static void printDataPoll(int[][] data, String[] qnames,
			String[][] vnames) {
		for (int people = 0; people < data.length; people++) {
			p("Респондент №" + (people + 1));
			for (int q = 0; q < qnames.length; q++) {
				p((q + 1) + ". " + qnames[q]);
				for (int v = 0; v < vnames[q].length; v++) {
					String choose = data[people][q] == v ? "*" : "";
					p("     " + choose + (v + 1) + ". " + vnames[q][v]);
				}
			}
		}
	}

	public static void p(Object o) {
		System.out.println(o);
	}

	public static int getSumArray(int[] arr) {
		int res = 0;
		for (int i = 0; i < arr.length; i++) {
			res += arr[i];
		}
		return res;
	}

}
